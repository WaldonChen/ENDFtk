#ifndef ENDFTK_IMPLEMENTATION_SECTIONSKELETON_SRC_SECTIONSKELETON_HPP
#define ENDFTK_IMPLEMENTATION_SECTIONSKELETON_SRC_SECTIONSKELETON_HPP

#include "ENDFtk.hpp"

namespace ENDFtk {
namespace implementation {

template<typename Iterator>
SectionSkeleton<Iterator>::SectionSkeleton(Iterator& begin, const Iterator& end, 
                                           long& lineNumber )
  : begin_(begin)
{
  try{
    // This assumes that the Section has more than one record
    auto tail = record::skip(begin, end, lineNumber);
    this->MAT_ = tail.MAT();
    this->MF_  = tail.MF();
    this->MT_  = tail.MT();

    while( tail.MT() != 0 ){
      tail = record::skip(begin, end, lineNumber);
    }
  } catch( std::exception& e ){
    LOG(ERROR) << "Trouble when creating a SectionSkeleton";
    throw e;
  }

  end_ = begin;
}

} // namespace implementation
} // namespace ENDFtk
#endif  // ENDFTK_IMPLEMENTATION_SECTIONSKELETON_SRC_SECTIONSKELETON_HPP
