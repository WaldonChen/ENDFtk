#ifndef ENDFTK_IMPLEMENTATION_SECTIONSKELETON_SRC_SECTIONSKELETON_HPP
#define ENDFTK_IMPLEMENTATION_SECTIONSKELETON_SRC_SECTIONSKELETON_HPP

#include "ENDFtk.hpp"

namespace ENDFtk {
namespace implementation {

template<typename Iterator>
SectionSkeleton<Iterator>::SectionSkeleton(
    const HeadRecord& head, 
    Iterator begin, Iterator& position, const Iterator& end, long& lineNumber )
  : begin_(begin) 
{
  try{
    this->MT_ = head.MT();

    // This assumes that the Section has more than one record
    auto tail = record::skip(position, end, lineNumber);

    while( tail.MT() != 0 ){
      tail = record::skip(position, end, lineNumber);
    }
  } catch( std::exception& e ){
    LOG(INFO) << "Trouble when creating a SectionSkeleton";
    LOG(INFO) << "Line number=" << lineNumber << ", MT=" << this->MT_;
    throw e;
  }

  end_ = position;
}

} // namespace implementation
} // namespace ENDFtk
#endif  // ENDFTK_IMPLEMENTATION_SECTIONSKELETON_SRC_SECTIONSKELETON_HPP
