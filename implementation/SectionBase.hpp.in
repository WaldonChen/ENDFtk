#ifndef ENDFTK_IMPLEMENTATION_SECTIONBASE_HPP
#define ENDFTK_IMPLEMENTATION_SECTIONBASE_HPP

#include "ENDFtk.hpp"

/** @brief Base class for all Sections
 *
 * @details This is the common functionality between all Sections so it makes
 * sense ot put it in a base class.
 */
class ENDFtk::implementation::SectionBase{
public:
  SectionBase( const HEAD& head );

  int MT() const { return MT_; }
  int ZA() const { return ZA_; }
  double atomicWeightRatio() const { return atomicWeightRatio_; }

  template<typename Iterator>
  void readSEND(int MF, Iterator& begin, const Iterator& end, long LN){
    try{
      auto SEND = ENDFtk::implementation::StructureDivision(
          begin, end, LN);
      if( not SEND.isSend() ){
        LOG(ERROR) << "No SEND Record at end of MF=" 
                   << MF << ", MT=" << MT_ << ".";
        throw std::exception();
      }
    } catch ( std::exception& e){
      LOG(INFO) << "There was a problem reading the SEND record in MF="
                << MF << ", MT=" << MT_ << ".";
      throw e;
    }
  }

  const int MT_;
  const int ZA_;
  const double atomicWeightRatio_;
};

#include "ENDFtk/implementation/SectionBase/Section3.hpp"

#endif  // ENDFTK_IMPLEMENTATION_SECTIONBASE_HPP

