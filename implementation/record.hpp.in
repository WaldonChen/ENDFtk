#ifndef ENDFTK_IMPLEMENTATION_RECORD_HPP
#define ENDFTK_IMPLEMENTATION_RECORD_HPP

namespace ENDFtk {
namespace implementation {
namespace record {

/* Base components */
template< int w >
struct Character;

template< int w >
struct Integer;

struct Real;

/* Record components */
template< typename... Fields >
struct Base;

class Tail;
struct Zipper;
struct Sequence;

template<typename Iterator>
Tail skip(Iterator& begin, const Iterator& end, long& lineNumber);

}
}
}

#include "ENDFtk/implementation/record/Tail.hpp"
#include "ENDFtk/implementation/record/Character.hpp"
#include "ENDFtk/implementation/record/Integer.hpp"
#include "ENDFtk/implementation/record/Real.hpp"
#include "ENDFtk/implementation/record/Base.hpp"
#include "ENDFtk/implementation/record/Zipper.hpp"
#include "ENDFtk/implementation/record/Sequence.hpp"

namespace ENDFtk {
namespace implementation {
namespace record {

template<typename Iterator>
Tail skip(Iterator& begin, const Iterator& end, long& lineNumber){
  try{
    Base< Character< 66 > >( begin, end );
    return Tail( begin, end, lineNumber );
  } catch( std::exception& e ){
    LOG(ERROR) << "Error while skipping a record.";
    throw e;
  }
}

}
}
}

#endif
