#ifndef ENDFTK_IMPLEMENTATION_FILESKELETON_SRC_CREATEINDEXEDVECTOR_HPP
#define ENDFTK_IMPLEMENTATION_FILESKELETON_SRC_CREATEINDEXEDVECTOR_HPP

#include "ENDFtk.hpp"

namespace ENDFtk {
namespace implementation {

template<typename Iterator>
std::vector<SectionSkeleton<Iterator> > 
FileSkeleton<Iterator>::createIndexedVector(
  const HeadRecord& head,
  Iterator begin, Iterator& position, const Iterator& end, 
  long& lineNumber ){
    std::vector<SectionSkeleton_t > SI;

    try{
      SI.push_back(
        SectionSkeleton_t(head, begin, position, end, lineNumber) );

      auto FEND = StructureDivision(position, end, lineNumber); 

      while( not FEND.isFend() ){
        if(position >= end){
          LOG(ERROR) << "File encountered end of stream before reading FEND";
          throw std::exception();
        }
        SI.push_back(
          SectionSkeleton_t(asHead(FEND), 
                                    begin, position, end, lineNumber) );

        begin = position;
        FEND = StructureDivision(position, end, lineNumber); 
      }
    } catch( std::exception& e ){
      LOG(INFO) << "Trouble when populating the FileSkeleton index";
      throw e;
    }

    return SI;
}

} // namespace implementation
} // namespace ENDFtk
#endif  // ENDFTK_IMPLEMENTATION_FILESKELETON_SRC_CREATEINDEXEDVECTOR_HPP
