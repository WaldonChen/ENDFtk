#ifndef ENDFTK_IMPLEMENTATION_FILESKELETON_SRC_FILESKELETON_HPP
#define ENDFTK_IMPLEMENTATION_FILESKELETON_SRC_FILESKELETON_HPP

#include "ENDFtk.hpp"

namespace ENDFtk {
namespace implementation {

template<typename Iterator>
FileSkeleton<Iterator>::FileSkeleton(Iterator& begin, const Iterator& end, 
                                           long& lineNumber )
  : begin_(begin)
{
  try{
    SectionSkeleton<Iterator> skeletor(begin, end, lineNumber);
    this->MAT_ = skeletor.MAT();
    this->MF_  = skeletor.MF();

    this->sections_.emplace_back(skeletor);
    auto tail = record::skip(begin, end, lineNumber); // Maybe a FEND record

    while( tail.MF() != 0 ){
      sections_.emplace_back(begin, end, lineNumber);
      tail = record::skip(begin, end, lineNumber); // Maybe a FEND record
    }
  } catch( std::exception& e ){
    LOG(ERROR) << "Trouble when creating a FileSkeleton";
    LOG(INFO) << "Line number=" << lineNumber << ", MF=" << this->MF_;
    throw e;
  }

  end_ = begin;
}

} // namespace implementation
} // namespace ENDFtk
#endif  // ENDFTK_IMPLEMENTATION_FILESKELETON_SRC_FILESKELETON_HPP

