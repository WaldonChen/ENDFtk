template< typename Format, int index, int... indices,
          typename Tuple, typename Pack >
static void
unpackIteratorTuple( Tuple& tuple, Pack& pack, std::false_type ){
  expandReferencePack< Format >( pack, std::get< indices >(tuple)... );
}

template< typename Format, int index, int... indices,
          typename Tuple, typename Pack >
static void
unpackIteratorTuple( Tuple& tuple, Pack& pack, std::true_type ){
  unpackIteratorTuple< Format, index - 1, index, indices... >
    ( tuple, pack, shouldContinueToRecurse< index >() );
}
