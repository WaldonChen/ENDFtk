#ifndef ENDFTK_IMPLEMENTATION_SECTIONBASE_SECTION_HPP
#define ENDFTK_IMPLEMENTATION_SECTIONBASE_SECTION_HPP

#include "ENDFtk/implementation/SectionBase.hpp"
#include "ENDFtk/implementation/UnivariateTabulation.hpp"

template<>
class ENDFtk::implementation::Section<3>: protected SectionBase {
public:

  template<typename Iterator>
  Section(HEAD& head, Iterator& begin, const Iterator& end, long lineNumber)
    try: SectionBase(head),
         TAB1_(begin, end, lineNumber, head.MAT(), head.MF(), head.MT() )
  { 
    try{
      auto SEND = ENDFtk::implementation::StructureDivision(
          begin, end, lineNumber);
      if( not SEND.isSend() ){
        LOG(ERROR) << "No SEND Record at end of MF=3, MT=" << MT_ << ".";
        throw std::exception();
      }
    } catch ( std::exception& e){
      LOG(INFO) << "There was a problem reading the SEND record in MF=3, MT="
                 << MT_ << ".";
      throw e;
    }
  } catch( std::exception& e ){
    LOG(INFO) << "Trouble constructing MF=3 Section.";
    throw e;
  }
    
  using SectionBase::MT;
  using SectionBase::ZA;
  using SectionBase::atomicWeightRatio;

  ENDFtk::implementation::UnivariateTabulation TAB1_;

};


#endif  // ENDFTK_IMPLEMENTATION_SECTIONBASE_SECTION_HPP

