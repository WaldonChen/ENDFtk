#ifndef ENDFTK_IMPLEMENTATION_SECTIONBASE_SECTION_HPP
#define ENDFTK_IMPLEMENTATION_SECTIONBASE_SECTION_HPP

#include "ENDFtk/implementation/SectionBase.hpp"
#include "ENDFtk/implementation/UnivariateTabulation.hpp"

namespace ENDFtk{
namespace implementation{

/** @brief Section specialization for MF=3
 */
template<>
class Section<3>: protected SectionBase {
public:

  /**
   *
   * @param \c head HeadRecord that beings the Section
   * @param \c begin Beginning @tparam Iterator from which the Section should be
   * created
   * @param \c begin Ending @tparam Iterator from which the Section should be
   * created
   * @param \c lineNumber
   * @param \c MAT, what Material number is expected. This is used for
   * verification.
   */
  template<typename Iterator>
  Section(HEAD& head, Iterator& begin, const Iterator& end, long& lineNumber,
          int MAT)
    try: SectionBase(head, MAT, 3),
         TAB1_(begin, end, lineNumber, head.MAT(), 3, head.MT() )
  { 
    readSEND(begin, end, lineNumber, MAT, 3 );

  } catch( std::exception& e ){
    LOG(INFO) << "Trouble constructing MF=3 Section.";
    throw e;
  }
    
  using SectionBase::MT;
  using SectionBase::ZA;
  using SectionBase::atomicWeightRatio;

  UnivariateTabulation TAB1_;

};

} // namespace implementation
} // namespace ENDFtk

#endif  // ENDFTK_IMPLEMENTATION_SECTIONBASE_SECTION_HPP

