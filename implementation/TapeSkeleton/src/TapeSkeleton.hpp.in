#ifndef ENDFTK_IMPLEMENTATION_TAPESKELETON_TAPESKELETON_HPP
#define ENDFTK_IMPLEMENTATION_TAPESKELETON_TAPESKELETON_HPP

namespace ENDFtk {
namespace implementation {

template<typename Iterator>
TapeSkeleton<Iterator>::TapeSkeleton(Iterator& begin, const Iterator& end, 
                                           long& lineNumber )
  : begin_(begin)
{
  try{
    ENDFtk::implementation::TapeIdentification TPID(begin, end, lineNumber);

    this->materials_.emplace_back(begin, end, lineNumber);

    auto tail = record::skip(begin, end, lineNumber); // Maybe a TEND record

    while( tail.MAT() != -1 ){
      materials_.emplace_back(begin, end, lineNumber);
      tail = record::skip(begin, end, lineNumber); // Maybe a TEND record
    }
  } catch( std::exception& e ){
    LOG(ERROR) << "Trouble when creating a TapeSkeleton";
    LOG(INFO) << "Line number=" << lineNumber;
    throw e;
  }

  end_ = begin;
}

} // namespace implementation
} // namespace ENDFtk

#endif  // ENDFTK_IMPLEMENTATION_TAPESKELETON_TAPESKELETON_HPP


